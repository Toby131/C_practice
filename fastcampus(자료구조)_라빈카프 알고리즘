//라빈카프 문자열 매칭

//문자열 선언 및 확인 함수 구현하기
#include <stdio.h>
#include <string.h>

char* parent = "acabacdabac";
char* pattern = "abacdab";

void check(char* parent, char* pattern, int start) {  //check는 부모 문자열에서 패턴 문자열 일치하는지 검사하는 함수
	int found = 1;
	int patternSize = strlen(pattern);
	for (int i = 0; i < patternSize; i++) {
		if (parent[start + i] != pattern[i]) { 
			found = 0; break;
		}
	}
	if (found) {
		printf("[인덱스 %d에서 매칭 발생]\n", start + 1); //해시값 일치하는 경우에만 수행
	}
}

//라빈 카프 알고리즘 구현하기
void rabinKarp(char* parent, char* pattern) {
	int parentSize = strlen(parent);
	int patternSize = strlen(pattern);
	int parentHash = 0, patternHash = 0, power = 1; //해시값초기화 
	for (int i = 0; i <= parentSize - patternSize; i++) {
		if (i == 0) {
			for (int j = 0; j < patternSize; j++) {
				parentHash = parentHash + parent[patternSize - 1 - j] * power;  //뒤에서부터 앞으로 이동하면서 곱함
				patternHash = patternHash + pattern[patternSize - 1 - j] * power;
				if (j < patternSize - 1) power = power * 2;
			}
		}
		else {
			parentHash = 2 * (parentHash - parent[i - 1] * power) + parent[patternSize - 1 + i];
		}
		if (parentHash == patternHash) {
			check(parent, pattern, i);
		}
	}
}

//라빈 카프 알고리즘 사용해보기
int main(void) {
	rabinKarp(parent, pattern);
	system("pause");
}
